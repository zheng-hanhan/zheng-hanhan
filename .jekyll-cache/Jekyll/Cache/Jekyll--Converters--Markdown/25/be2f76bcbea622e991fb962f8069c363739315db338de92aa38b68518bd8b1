I"(<p>今天给大家推荐几本计算机专业相关的经典书籍，大部分是我在研究生期间看过的，少部分是工作后看的或者正在看的。工作这一年多来，最大的感受就是忙，留有的看书时间太少了，希望在即将到来的2020年能够多挤些时间读书，多读好书，不论专业书籍还是非专业书籍亦或者会议、期刊类学术文章，这个帖子也算是立贴为证，提醒自己吧</p>

<h2 id="综合">综合</h2>
<ol>
  <li>
    <p><a href="https://book.douban.com/subject/26344642/">Computer Systems:A Programmer’s Perspective</a>
《深入理解计算机系统》<br />豆瓣9.6的神书，我首推的一本书，非常棒</p>
  </li>
  <li>
    <p><a href="https://book.douban.com/subject/1451622/">Structure and Interpretation of Computer Programs</a>《计算机程序的构造和解释》<br />也是9.6的神书，不多说，看就对了</p>
  </li>
</ol>

<h2 id="操作系统">操作系统</h2>
<p>操作系统的重要性不用多说了吧</p>
<ol>
  <li>
    <p><a href="https://book.douban.com/subject/25864553//">Modern Operating Systems</a>《现代操作系统》<br />特别喜欢这本书关于同步、锁等知识的描述</p>
  </li>
  <li>
    <p><a href="https://book.douban.com/subject/1776614/">Understanding the Linux Kernel</a>《深入理解linux内核》<br />作者们是教授OS的老师，他们以Linux作为实践平台，最终积累出这本书，写的非常好，安利</p>
  </li>
  <li>
    <p><a href="https://book.douban.com/subject/1231584/">Linux内核源代码情景分析（上册）</a>
<a href="https://book.douban.com/subject/1240321/">Linux内核源代码情景分析（下册）</a><br />浙大的校友写的内核巨著，非常赞，不过太厚了，只看了一大半，把主要的部分反复看了几遍。</p>
  </li>
  <li>
    <p><a href="https://book.douban.com/subject/5503292/">Linux Kernel Development</a>《Linux内核设计与实现》<br />这本书相比其他几本，比较薄，给你一个全局视角吧算是，作者是给Linux内核加入抢占的大佬</p>
  </li>
  <li>
    <p><a href="https://book.douban.com/subject/3244090/">Professional Linux Kernel Architecture</a> 《深入Linux内核架构》<br />这本书作者是个德国物理学家，关键问题是，长得还帅，这本书还没来得及看</p>
  </li>
</ol>

<h2 id="链接和装载">链接和装载</h2>
<p>就推荐两本</p>
<ol>
  <li>
    <p>《<a href="https://book.douban.com/subject/3652388//">程序员的自我修养：链接、装载和库</a>》<br /> 这本优秀著作是浙大研究生空闲时间写的，赞爆，少有的中文计算机好书</p>
  </li>
  <li>
    <p><a href="https://book.douban.com/subject/1436811/">Linker and Loader</a><br />好书，虽然年代稍远</p>
  </li>
</ol>

<h2 id="编程语言编译器">编程语言、编译器</h2>
<p>这方面程序员还是有必要了解下的</p>
<ol>
  <li>
    <p><a href="">Inside the C++ Object Model</a>《深度搜索C++对象模型》<br />这本书中文版是侯捷老师翻译的，候老师在中文版中更正了原版中的诸多错误，这本书建议读中文译本，毕竟谁也没想到原版那么多错，不过这本书真的妙啊</p>
  </li>
  <li>
    <p><a href="https://book.douban.com/subject/26424018/">Programming Language Pragmatics</a><br /> 入门挺好的一本书，出到第四版了，16年的好像，可以说是非常新了，这本书我看的比较快</p>
  </li>
  <li>
    <p><a href="https://book.douban.com/subject/5288601//">Engineering a Compiler</a><br />这本书简称EAC，出到第二版了好像，11年，写的蛮好的一本书</p>
  </li>
  <li>
    <p><a href="https://book.douban.com/subject/1821532/">Advanced Compiler Design and Implementation</a><br /> 俗称鲸书，着重中后端优化。出版时间早，97年出版的，影印版几个电商的自营里面都没有了，需要加价才能买到，还是看电子版吧</p>
  </li>
  <li>
    <p><a href="https://book.douban.com/subject/1777406/">Modern Compiler Implementation in ML</a><br /> <a href="https://book.douban.com/subject/1923484/">Modern Compiler Implementation in Java</a><br /><a href="https://book.douban.com/subject/1886911/">Modern Compiler Implementation in C</a><br />常说的虎书，有三个版本，也比较早了，00年左右出版的</p>
  </li>
  <li>
    <p><a href="https://book.douban.com/subject/5416783/">Compilers: Principles, Techniques, and Tools</a> <br />大名鼎鼎的龙书，当前最新的应该是第二版，06年更新的，不多说了哈</p>
  </li>
  <li>
    <p><a href="http://ssabook.gforge.inria.fr/latest/book.pdf">Static Single Assignment Book</a> <br /> 这本书集合了好多大佬，比如fred chow…</p>
  </li>
</ol>

<h2 id="虚拟机">虚拟机</h2>
<ol>
  <li>
    <p><a href="https://docs.oracle.com/javase/specs/index.html">Java Language and Virtual Machine Specifications</a><br /> Oracle公司官方文档，绝对值得反复看的哈</p>
  </li>
  <li>
    <p><a href="https://read.douban.com/ebook/110275324/">深入理解Android：Java虚拟机ART</a><br /> 邓凡平大佬写的，这本书写的特别好，大力推荐</p>
  </li>
  <li>
    <p><a href="https://book.douban.com/subject/24722612/">深入理解Java虚拟机 JVM高级特性与最佳实践</a><br /> 国内这方便比较好的书，周志明先生写的</p>
  </li>
  <li>
    <p><a href="https://www.artima.com/insidejvm/blurb.html">Inside The Java Virtual Machine</a><br />这本书比较老了，当时没找到好的pdf，但是发现张江校区图书馆有，哈哈，借阅出去，到邯郸校区上课的时候，顺便在打印店复印了一本，哈哈哈</p>
  </li>
  <li>
    <p><a href="https://book.douban.com/subject/4873919/">Oracle JRockit:The Definitive Guide</a></p>
  </li>
  <li>
    <p><a href="https://book.douban.com/subject/26687918/">Advanced Design and Implementation of Virtual Machines</a></p>
  </li>
</ol>

<h2 id="算法">算法</h2>
<p>列两三个容易取到的又通俗易懂的吧</p>
<ol>
  <li>
    <p><a href="https://algs4.cs.princeton.edu/home/">Algorithms, 4th Edition by Robert Sedgewick and Kevin Wayne</a><br />普林斯顿大学Robert Sedgewick and Kevin Wayne写的，关键这个网页版好呀</p>
  </li>
  <li>
    <p><a href="http://jeffe.cs.illinois.edu/teaching/algorithms/">Algorithms by Jeff Erickson</a><br />伊利诺伊大学厄巴纳 - 香槟分校Jeff Erickson教授执笔大作，免费的哦，直接点击进去就可以下载</p>
  </li>
</ol>

<h2 id="其他">其他</h2>
<ol>
  <li>
    <p><a href="https://software.intel.com/en-us/articles/intel-sdm">Intel® 64 and IA-32 Architectures Software Developer Manuals</a><br />这个有事没事的时候可以翻翻，毕竟手册嘛，比如之前上学那会在看Linux内核书籍的时候，里面提到了影子寄存器，咦，这个手册里就有介绍，哈哈哈</p>
  </li>
  <li>
    <p><a href="https://book.douban.com/subject/25726019/">汇编语言</a><br />王爽写的，比较薄，当时买来很快就看完了，蛮不错的</p>
  </li>
  <li>
    <p>ARM System Developer’s Guide: Designing and Optimizing System Software<br />这本还没有来得及看，先放在这</p>
  </li>
</ol>

<h2 id="写在后面的话">写在后面的话</h2>
<ol>
  <li>
    <p>大家尽量读原版书籍哈，不论从哪个角度来说哈</p>
  </li>
  <li>
    <p>还有很多不错的书，比如C++ Primer，Thinking in Java、Java Core、C专家编程、代码大全、
Refactoring: Improving the Design of Existing Code等等，这些书就不放在这里了，有机会下次另说</p>
  </li>
  <li>
    <p>出于版权考虑，这里大都没有给出电子版链接，请自行购买正版图书或者google~</p>
  </li>
  <li>
    <p>不看书是不行的，光看书也是不行的~</p>
  </li>
</ol>

<p>[本文初稿写于2019年12月30日下榻的酒店中]</p>
:ET